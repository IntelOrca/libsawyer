name: CI
on: [push, pull_request]
jobs:
  alpine:
    name: Alpine
    runs-on: ubuntu-latest
    container: alpine
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - name: Prepare environment
        run: apk add bash cmake ninja g++ libpng-dev nlohmann-json gtest-dev
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build libsawyer and tools
        run: ./build
      - name: Test libsawyer
        run: ./run-tests
      - name: Upload tools
        uses: actions/upload-artifact@v3
        with:
          name: libsawyer-tools-musl-${{ matrix.platform }}.tar.gz
          path: artefacts/libsawyer-tools-musl-${{ matrix.platform }}.tar.gz
  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - name: Prepare environment
        run: sudo apt-get install ninja-build libpng-dev nlohmann-json3-dev libgtest-dev
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build libsawyer and tools
        run: ./build
      - name: Test libsawyer
        run: ./run-tests
      - name: Upload tools
        uses: actions/upload-artifact@v3
        with:
          name: libsawyer-tools-linux-${{ matrix.platform }}.tar.gz
          path: artefacts/libsawyer-tools-linux-${{ matrix.platform }}.tar.gz

  windows-shared:
    name: "Windows[shared]"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - platform: x86
          arch: x86
        - platform: x64
          arch: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
#     - uses: actions/setup-python@v2
#       with:
#         python-version: '2.x'
#     - name: Setup python pre-reqs
#       shell: cmd
#       run: |
#         cd /D ${{ env.pythonLocation }}
#         mklink python2.exe python.exe
#         pip install PyYAML

      - name: Cache vcpkg
        uses: actions/cache@v3
        env:
          cache-name: cache-vcpkg
        with:
          path: C:/vcpkg
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Build libsawyer
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=${{ matrix.arch }}
          cmake -G Ninja -B bin -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=%VCPKG_INSTALLATION_ROOT%\scripts\buildsystems\vcpkg.cmake
          cmake --build bin
          cmake --install bin
          cd out
          7z a -tzip -mx9 -mtc=off ..\libsawyer-shared-${{ matrix.platform }}.zip *

      - name: Test libsawyer
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=${{ matrix.arch }}
          cmake --build bin --target tests
          cmake --build bin --target test_crash
          cd bin
          ctest

      - name: Upload zip as artifact
        uses: actions/upload-artifact@v3
        with:
          name: libsawyer-shared-${{ matrix.platform }}.zip
          path: libsawyer-shared-${{ matrix.platform }}.zip

  windows-static:
    name: "Windows[static]"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - platform: x86
          arch: x86
        - platform: x64
          arch: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache vcpkg
        uses: actions/cache@v3
        env:
          cache-name: cache-vcpkg
        with:
          path: C:/vcpkg
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Build libsawyer
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=${{ matrix.arch }}
          cmake -G Ninja -B bin -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-windows-static -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_TOOLCHAIN_FILE=%VCPKG_INSTALLATION_ROOT%\scripts\buildsystems\vcpkg.cmake
          cmake --build bin
          cmake --install bin
          cd out
          7z a -tzip -mx9 -mtc=off ..\libsawyer-static-${{ matrix.platform }}.zip *

      - name: Build fsaw
        if: matrix.platform == 'x64'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=${{ matrix.arch }}
          cd tools/fsaw
          cmake -G Ninja -B bin -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_TOOLCHAIN_FILE=%VCPKG_INSTALLATION_ROOT%\scripts\buildsystems\vcpkg.cmake
          cmake --build bin

      - name: Build spritec
        if: matrix.platform == 'x64'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=${{ matrix.arch }}
          cd tools/spritec
          cmake -G Ninja -B bin -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_TOOLCHAIN_FILE=%VCPKG_INSTALLATION_ROOT%\scripts\buildsystems\vcpkg.cmake
          cmake --build bin

      - name: Upload libsawyer
        uses: actions/upload-artifact@v3
        with:
          name: libsawyer-static-${{ matrix.platform }}.zip
          path: libsawyer-static-${{ matrix.platform }}.zip

      - name: Upload tools
        if: matrix.platform == 'x64'
        uses: actions/upload-artifact@v3
        with:
          name: libsawyer-tools.zip
          path: |
            tools/fsaw/bin/fsaw.exe
            tools/spritec/bin/spritec.exe
